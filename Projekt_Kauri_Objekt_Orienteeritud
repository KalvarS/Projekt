from tkinter import *

kaart = """
##################################################
#     #  $#      #       ##    #   #$            #
#     #   # #### ##### #    ## ### ######## #### #
#  ZZ   ###    # #   # ######         #   # # #  #
#              #   #     # ########## # # # # #  #
### ## ######  ######### # #   #       $#   #    #
#    # #               # # # # # ############### #
#### # ######### ##### #     # #         #       #
#    #        $#     # ####### # ### ### # #######
###  ####### ######### #           # #   # #     #
#$     #               # ######### # # ### #  #  #
###### # ###############  $#     # ### # # ##### #
#   #  # #      #     #  # # ### #       # #     #
#   #  # #### # ##### # ## # #   ######### # ### #
#      #    # # #     #  #   #       #       #$  #
#  ######## # # # # ###  ########### # ######### #
#  #$$$     # # # # #$               #     #     #
#  #######  ### ### ### ############## ##### #####
#                 #  #  #     #   #        # #   #
####### ############ # ## ### # ###  ##### #   # #
#             #   #  #    #   #      #     ##### #
############# # # # ## #### ### #### #######     #
# #   #     # #           #     #    #       #####
#   #   #         ## #### ############ ##### #   #
## ################  #    # #  #         # # #   #
#                   ##### # #  #  ######## #     #
#### # ###############         #  #   # ## ##### #
#$   # #    # #   #    #  # #  #  #   #          #
## ###   ## #   #   # ##########  ### ############
#  # #####  ######### #      #                   #
## #   # #     #      #$#  # #########  #####    #
#  # # # ##### # #### #### # #   #   #      #### #
## # #       # # # #  #    # # # # # ###### #    #
#    #########   #    # # ## # #     #    # #    #
# ####   #   ##### #### # #  # # ### #  # #####  #
# #    # ###     #      # # ## # #   #  #   #    #
# ## ### #   ################### #  ### ### #### #
#    #   # #    #   #   #   #    #    # #   # $# #
# ##$#     #  #   #   #   #      #  #   # #    # #
################################################E#
"""



raam = Tk()
raam.title("Mäng")
tahvel = Canvas(raam, width=500, height=500, background="white")
tahvel.grid()

class Maailm:
    maailm = [] #Tühi maailm
    def __init__(self,laius,pikkus,kaart,tahvel):
        self.kaart = kaart
        self.laius = laius
        self.pikkus = pikkus
        self.tahvel = tahvel


#Loob tühja maailma(kahemõõtmelise listi) antud mõõtmetega.
    def looMaailmMõõtmetega(self):
        for y in range(self.pikkus):
            self.maailm.append([])
            for x in range(self.laius):
                self.maailm[y].append(" ")

    def loeKaartSisse(self):
        read = self.kaart.strip().split("\n")
        for rea_nr in range(len(read)):
            rida = read[rea_nr]
            for veeru_nr in range(len(rida)):
                if rida[veeru_nr] == "T":
                    Tegelane(veeru_nr,rea_nr,10,"Juks").looAknasse()
                elif rida[veeru_nr] == " ":
                    Õhk(veeru_nr,rea_nr).looAknasse()
                elif rida[veeru_nr] == "#":
                    Sein(veeru_nr,rea_nr).looAknasse()
                elif rida[veeru_nr] == "Z":
                    ElektriAed(veeru_nr,rea_nr).looAknasse()
                elif rida[veeru_nr] == "E":
                    Väljapääs(veeru_nr,rea_nr).looAknasse()
                elif rida[veeru_nr] == "$":
                    Münt(veeru_nr,rea_nr).looAknasse()
    def muudaObjekti(self,veeru_nr,rea_nr,objekt):
        self.maailm[veeru_nr][rea_nr] == objekt
        return objekt

    def leiaObjekt(self,x,y):
        #print(self.maailm)
        return self.maailm[x][y]



class Objekt(Maailm):
    objektideLoendur = 0
    x = 0
    y = 0
    def __init__(self,x,y):
        self.x = x * 10 + 5
        self.y = y * 10 + 5
        Objekt.objektideLoendur += 1
        self.objektiID = Objekt.objektideLoendur
        Maailm.maailm[x][y] = self

    def tagastaSümbol(self):
        return self.märk

    def id(self):
        return self.objektiID

    def kuvaKogus(self):
        print("Objekte kokku" , Objekt.objektideLoendur)

    def koordinaadid(self):
        print("X:",self.x,"Y:",self.y)

    def xcord(self):
        return self.x

    def ycord(self):
        return self.y

    def eemalda(self):
        self.maailm[self.x][self.y] = " "

    def looAknasse(self):
        tahvel.create_image(self.x,self.y,image=self.pilt,tag=self.tag, anchor="center")

class Õhk(Objekt):
    nimi = "õhk"
    tag = "läbitav"
    märk = " "
    pilt = PhotoImage(file="õhk.gif")

class Sein(Objekt):
    nimi = "sein"
    tag = "takistus"
    märk = "#"
    pilt = PhotoImage(file="sein.gif")

class ElektriAed(Objekt):
    nimi = "elektri aed"
    tag = ("takistus", "surmav")
    märk = "Z"
    pilt = PhotoImage(file="elekter.gif")

class Väljapääs(Objekt):
    nimi = "väljapääs"
    tag = "lõpp"
    märk = "E"
    pilt = PhotoImage(file="lõpp.gif")

class Münt(Objekt):
    nimi = "münt"
    tag = ("läbitav", "kogutav")
    märk = "$"
    pilt = PhotoImage(file="mynt.gif")

class Olend(Objekt):
    def __init__(self,x,y,elud,nimi):
        Objekt.__init__(self,x,y)
        self.elud = elud
        self.nimi = nimi
        self.olendiID = Objekt.objektideLoendur
        Objekt.objektideLoendur += 1

    def leiaID(self,x,y): #Enne oli ilma x ja y-ita
        #tahvel.create_rectangle(self.x-5,self.y-5,self.x+5,self.y+5)
        return tahvel.find_closest(x,y)

    def olendeidKokku(self):
        return Objekt.objektideLoendur

    def id(self):
        return self.olendiID

    def tuvastaTakistus(self,x,y):
        print(str(self.leiaID(x,y)))
        if tahvel.find_withtag("takistus").__contains__(self.leiaID(x,y)[0]):
            if tahvel.find_withtag("surmav").__contains__(self.leiaID(x,y)[0]):
                print("Said elektrit, kaotasid",2, "elupunkti")
                self.elud -= 2
                if self.elud <= 0:
                    self.sure()
                    print("Said surma")
                else:
                    print("Elusid alles", self.elud)
            return True
        else:
            return False

    def liiguVasakule(self,event):
        if self.elus:
            if not self.tuvastaTakistus(self.x-10,self.y):
                tahvel.move(self.leiaID(self.x,self.y),-10,0) #Tegelase ID 2001
                self.x -= 10

    def liiguParemale(self,event):
        if self.elus:
            if not self.tuvastaTakistus(self.x+10,self.y) and self.elus:
                tahvel.move(self.leiaID(self.x,self.y),10,0)
                self.x += 10

    def liiguÜlesse(self,event):
        if self.elus:
            if not self.tuvastaTakistus(self.x,self.y-10) and self.elus:
                tahvel.move(self.leiaID(self.x,self.y),0,-10)
                self.y -= 10

    def liiguAlla(self,event):
        if self.elus:
            if not self.tuvastaTakistus(self.x,self.y+10) and self.elus:
                tahvel.move(self.leiaID(self.x,self.y),0,10)
                self.y += 10

class Tegelane(Olend):
    elus = True
    tag = ("läbitav", "olend")
    nimi = "Juks"
    märk = "T"
    pilt = PhotoImage(file="Tegelane.gif")

    def sure(self):
        self.elus = False

    def määraNimi(self,nimi):
        self.nimi = nimi

    def tagastaNimi(self):
        return self.nimi

    def tapaTegelane(self):
        Tegelane.elus = False

    def räägi(self, event):
        if self.elus == True:
            print(Tegelane.tagastaNimi(self)+": Ma oskan rääkida!")
        else:
            print("'Tegelane on surnud'")

maailm = Maailm(500,500,kaart,tahvel)
maailm.looMaailmMõõtmetega()
maailm.loeKaartSisse()


print(maailm.leiaObjekt(1,1))



teg = maailm.muudaObjekti(1,1,Tegelane(1,1,10,"Juks"))
teg.looAknasse()
#teg = maailm.leiaObjekt(1,1)
#teg = Tegelane(1,1,10,"Juks")

raam.bind_all("<Up>",    teg.liiguÜlesse)
raam.bind_all("<Down>",  teg.liiguAlla)
raam.bind_all("<Left>",  teg.liiguVasakule)
raam.bind_all("<Right>", teg.liiguParemale)
raam.bind_all("<Enter>", teg.räägi)

raam.mainloop()
